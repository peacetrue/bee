apply plugin: "application"
application {
    applicationDefaultJvmArgs = ["-Xms50M", "-Xmx50M", "-Dspring.profiles.active=prod"]
}

ext {
    // 远程服务配置，需提前做免密。
    // 脚本执行时，不能触发输入密码
    remoteHost = "root@aliyun"
    remotePort = ""
    remoteWorkingDir = "~/bee/${project.name}"
    remoteArchiveName = "$archivesBaseName-boot"
}

//初始化远程目录
task prepareRemote(group: "peacetrue-deploy") {
    doLast {
        exec {
            def args = ["ssh", "$remoteHost", "mkdir -p $remoteWorkingDir"]
            println "command: ${String.join(" ", args)}"
            commandLine(args)
            ignoreExitValue(true)
        }
    }
}


installBootDist.finalizedBy("uploadToRemote")
// 上传 jar 包到远程
task uploadToRemote(group: "peacetrue-deploy") {
    doLast {
        exec {
            workingDir("$buildDir/install")
            def args = ["scp", "-r", "$remoteArchiveName", "$remoteHost:$remoteWorkingDir"]
            println "command: ${String.join(' ', args)}"
            commandLine(args)
        }
    }
}


uploadToRemote.finalizedBy("restartRemote")
// 重启远程服务
task restartRemote(group: "peacetrue-deploy") {
    doLast {
        // bash: line 1: kill-by-port: command not found -> https://stackoverflow.com/questions/820517/bashrc-at-ssh-login
        exec {
            def args = ["ssh", "$remoteHost", "cd $remoteWorkingDir/$remoteArchiveName; kill-by-port $remotePort; nohup bin/${archivesBaseName} > /dev/null 2>&1 &"]
            println "command: ${args.get(0)} ${args.get(1)} '${args.get(2)}'"
            commandLine(args)
        }
    }
}

restartRemote.finalizedBy("openChromeRemote")
// 使用 Chrome 打开应用地址
task openChromeRemote(group: "peacetrue-deploy") {
    doLast {
        exec {
            commandLine("open", "-a", "Google Chrome", "http://peacetrue.cn:$remotePort")
            ignoreExitValue(true)
        }
    }
}

// 本地重启服务
task restartLocal(group: "peacetrue-deploy") {
    doLast {
        def dir = "$buildDir/install/${project.name}-boot"
        exec {
            workingDir(dir)
            def args = ["kill-by-port", "$remotePort"]
            println "command: ${String.join(' ', args)}"
            commandLine(args)
            ignoreExitValue(true)
        }
        exec {
            workingDir(dir)
            def args = ["nohup", "bin/${project.name}", "1>/dev/null", "2>&1", "&"]
            println "command: ${String.join(' ', args)}"
            commandLine(args)
            ignoreExitValue(true)
        }
    }
}
